library(shiny); runApp('shinyNR.R')
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
??clip
runApp()
legend(x = "topright",
legend = c("f(x)", "f'(x)", "f''(x)"),
col = c("black", "red", "green"),
lwd = 2)
runApp()
shiny::runApp()
#clip(-5,5,0,LLp[i])
#abline(v=th.vec[i], lty = 2, lwd = 2, col = "green")
}
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
# Draw point and slope dependent on selected iteration
text(2, -2, paste("Iter: ", i), pos = 2)
runApp()
??abline
runApp()
runApp()
#abline(v=th.vec[i+1], lty=3, lwd=2, col="green")
#clip(-5,5,0,LLp[i])
#abline(v=th.vec[i], lty = 2, lwd = 2, col = "green")
}
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
#### intro_tab ####
intro_tab <- tabItem(
tabName = "intro_tab",
h3("Introduction to local search algorithms"),
h5("Local versus Global algorithms")
p("This app is designed to help you understand the algorithms used in statistical estimation.")
)
#### intro_tab ####
intro_tab <- tabItem(
tabName = "intro_tab",
h3("Introduction to local search algorithms"),
p("This app is designed to help you understand the algorithms used in statistical estimation."),
h5("Local versus Global algorithms"),
p("test test test.")
)
#### steep_tab ####
accent_tab <- tabItem(
tabName = "accent_tab",
h3("Steepest Ascent"),
p("Steepest Ascent is a local search algorithm, slowly moving to the local maxima"),
plotOutput("accent", height = "600px", width = "50%")
)
runApp()
runApp()
seq(0, 4, 0.0001)
test(seq(0, 4, 0.0001))
test <- function(x) {
x * sin(x)
}
test(seq(0, 4, 0.0001))
plot(bla)
test <- function(x) {
x * sin(x)
}
bla <- test(seq(0, 4, 0.0001))
plot(bla)
p
pi
test <- function(x) {
x * sin(x)
}
bla <- test(seq(0, 4*pi, 0.01))
plot(bla)
plot(bla, type = "l")
runApp()
plot(loglikpois(seq(0, 5, 0.01), 10, 2.5), type = "l")
plot(loglikpois(seq(0, 5, 0.01), 10, 2.5), type = "l")
plot(loglikpois(seq(0, 5, 0.01)$ll, 10, 2.5), type = "l")
loglikpois(seq(0, 5, 0.01)$ll, 10, 2.5)
loglikpois(seq(0, 5, 0.01), 10, 2.5)$ll
plot(loglikpois(seq(0, 5, 0.01), 10, 2.5)$ll, type = "l")
plot(loglikpois(seq(0, 5, 0.01), 100, 40)$ll, type = "l")
runApp()
plot(loglikpois(seq(0, 5, 0.01), 32, 2.4)$ll, type = "l")
plot(loglikpois(seq(0, 5, 0.01), 32, 2.4)$ll, type = "l")
plot(loglikpois(seq(0, , 0.01), 10, 2.4)$ll, type = "l")
plot(loglikpois(seq(0, , 0.01), 300, 2.4)$ll, type = "l")
plot(loglikpois(seq(0, , 0.01), 30, 2.4)$ll, type = "l")
plot(loglikpois(seq(0, , 0.01), 30, 2.4)$ll, type = "l")
plot(loglikpois(seq(0, 5, 0.01), 30, 2.4)$ll, type = "l")
plot(loglikpois(seq(0, 5, 0.01), 90, 2.4)$ll, type = "l")
plot(loglikpois(seq(0, 5, 0.01), 50, 2.4)$ll, type = "l")
runApp()
plot(loglikpois(seq(0, 5, 0.01), 50, )$ll, type = "l")
plot(loglikpois(seq(0, 5, 0.01), 50, 5)$ll, type = "l")
plot(loglikpois(seq(0, 3, 0.01), 50, 5)$ll, type = "l")
plot(loglikpois(seq(0, 5, 0.01), 31, 2)$ll, type = "l")
plot(loglikpois(seq(0, 5, 0.01), 31, 1)$ll, type = "l")
runApp()
runApp()
runApp()
